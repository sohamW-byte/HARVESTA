{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user profile in the application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "email": {
          "type": "string",
          "description": "User's email address. This field is immutable.",
          "format": "email",
          "readonly": true
        },
        "name": {
          "type": "string",
          "description": "User's full name."
        },
        "phoneNumber": {
          "type": "string",
          "description": "User's phone number."
        },
        "address": {
            "type": "string",
            "description": "User's full address."
        },
        "cropsGrown": {
          "type": "array",
          "description": "List of crops grown by the user.",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "type": "string",
          "description": "The role of the user. This field is immutable.",
          "enum": [
            "farmer",
            "buyer",
            "admin"
          ],
          "readonly": true
        },
        "farmerId": {
          "type": "string",
          "description": "Government-issued Farmer ID, required if role is 'farmer'."
        },
        "gstNumber": {
          "type": "string",
          "description": "GST Number, required if role is 'buyer'."
        }
      },
      "required": [
        "id",
        "email",
        "name",
        "role"
      ]
    },
    "Field": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Field",
      "type": "object",
      "description": "Represents a field with its associated data.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the field."
        },
        "name": {
          "type": "string",
          "description": "Name of the field."
        },
        "cropType": {
          "type": "string",
          "description": "Type of crop planted in the field."
        },
        "healthStatus": {
          "type": "string",
          "description": "Current health status of the field (e.g., Good, Fair, Poor)."
        },
        "plantingDate": {
          "type": "string",
          "description": "Date when the crop was planted.",
          "format": "date-time"
        },
        "harvestDate": {
          "type": "string",
          "description": "Expected or actual harvest date.",
          "format": "date-time"
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Field)"
        }
      },
      "required": [
        "id",
        "name",
        "cropType",
        "healthStatus",
        "plantingDate",
        "harvestDate",
        "userId"
      ]
    },
    "Expense": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Expense",
      "type": "object",
      "description": "Represents an expense record.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the expense."
        },
        "amount": {
          "type": "number",
          "description": "Amount of the expense."
        },
        "type": {
          "type": "string",
          "description": "Type of expense (e.g., Fertilizer, Labor)."
        },
        "date": {
          "type": "string",
          "description": "Date when the expense was incurred.",
          "format": "date-time"
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Expense)"
        }
      },
      "required": [
        "id",
        "amount",
        "type",
        "date",
        "userId"
      ]
    },
    "Task": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Task",
      "type": "object",
      "description": "Represents a task to be completed.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the task."
        },
        "title": {
          "type": "string",
          "description": "Title of the task."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the task."
        },
        "status": {
          "type": "string",
          "description": "Current status of the task (e.g., To Do, In Progress, Completed)."
        },
        "date": {
          "type": "string",
          "description": "Due date or target date for the task.",
          "format": "date-time"
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Task)"
        }
      },
      "required": [
        "id",
        "title",
        "status",
        "date",
        "userId"
      ]
    },
    "GrowthData": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "GrowthData",
      "type": "object",
      "description": "Represents growth data for a specific field.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the growth data entry."
        },
        "fieldId": {
          "type": "string",
          "description": "Reference to Field. (Relationship: Field 1:N GrowthData)"
        },
        "date": {
          "type": "string",
          "description": "Date when the growth data was recorded.",
          "format": "date-time"
        },
        "height": {
          "type": "number",
          "description": "Height of the crop at the time of measurement."
        },
        "biomass": {
          "type": "number",
          "description": "Biomass of the crop at the time of measurement."
        },
        "leafArea": {
          "type": "number",
          "description": "Leaf area of the crop at the time of measurement."
        }
      },
      "required": [
        "id",
        "fieldId",
        "date",
        "height",
        "biomass",
        "leafArea"
      ]
    },
    "MarketPrice": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "MarketPrice",
      "type": "object",
      "description": "Represents market price data for a specific crop.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the market price entry."
        },
        "cropName": {
          "type": "string",
          "description": "Name of the crop."
        },
        "marketPrice": {
          "type": "number",
          "description": "Current market price for the crop."
        },
        "location": {
          "type": "string",
          "description": "Location where the price is applicable."
        },
        "lastUpdated": {
          "type": "string",
          "description": "Date and time when the price was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "cropName",
        "marketPrice",
        "location",
        "lastUpdated"
      ]
    },
    "ProduceListing": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ProduceListing",
      "type": "object",
      "description": "Represents a listing of produce for sale.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the produce listing."
        },
        "cropName": {
          "type": "string",
          "description": "Name of the crop being listed."
        },
        "quantity": {
          "type": "number",
          "description": "Quantity of the crop available for sale."
        },
        "price": {
          "type": "number",
          "description": "Price of the crop per unit."
        },
        "contactInfo": {
          "type": "string",
          "description": "Contact information for the seller."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N ProduceListing)"
        }
      },
      "required": [
        "id",
        "cropName",
        "quantity",
        "price",
        "contactInfo",
        "userId"
      ]
    },
    "Feedback": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Feedback",
      "type": "object",
      "description": "Represents user feedback submitted through the app.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the feedback."
        },
        "name": {
          "type": "string",
          "description": "Name of the person submitting feedback."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "Email of the person submitting feedback."
        },
        "message": {
          "type": "string",
          "description": "The feedback message."
        },
        "userId": {
          "type": "string",
          "description": "The ID of the user submitting feedback, if logged in."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the feedback was submitted."
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "message",
        "createdAt"
      ]
    },
    "Order": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Order",
      "type": "object",
      "description": "Represents an order placed on the marketplace.",
      "properties": {
        "id": { "type": "string" },
        "buyerId": { "type": "string" },
        "sellerId": { "type": "string" },
        "listingId": { "type": "string" },
        "quantity": { "type": "number" },
        "totalPrice": { "type": "number" },
        "commission": { "type": "number" },
        "status": { "type": "string", "enum": ["pending", "confirmed", "shipped", "completed", "canceled"] },
        "createdAt": { "type": "string", "format": "date-time" }
      },
      "required": ["id", "buyerId", "sellerId", "listingId", "quantity", "totalPrice", "commission", "status", "createdAt"]
    },
    "Subscription": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Subscription",
      "type": "object",
      "description": "Represents a user's subscription plan.",
      "properties": {
        "id": { "type": "string" },
        "userId": { "type": "string" },
        "planId": { "type": "string", "enum": ["starter", "pro", "business"] },
        "status": { "type": "string", "enum": ["active", "canceled", "past_due"] },
        "startDate": { "type": "string", "format": "date-time" },
        "endDate": { "type": "string", "format": "date-time" }
      },
      "required": ["id", "userId", "planId", "status", "startDate"]
    },
    "Transaction": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Transaction",
      "type": "object",
      "description": "Represents a financial transaction, like a commission payment.",
      "properties": {
        "id": { "type": "string" },
        "orderId": { "type": "string" },
        "userId": { "type": "string" },
        "amount": { "type": "number" },
        "type": { "type": "string", "enum": ["commission", "payout", "subscription_fee"] },
        "status": { "type": "string", "enum": ["pending", "completed", "failed"] },
        "createdAt": { "type": "string", "format": "date-time" }
      },
      "required": ["id", "orderId", "userId", "amount", "type", "status", "createdAt"]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": { "$ref": "#/backend/entities/User" },
          "description": "Stores user profile information."
        }
      },
      {
        "path": "/users/{userId}/fields/{fieldId}",
        "definition": {
          "entityName": "Field",
          "schema": { "$ref": "#/backend/entities/Field" },
          "description": "Stores field data for a user."
        }
      },
      {
        "path": "/users/{userId}/expenses/{expenseId}",
        "definition": {
          "entityName": "Expense",
          "schema": { "$ref": "#/backend/entities/Expense" },
          "description": "Stores expense records for a user."
        }
      },
      {
        "path": "/users/{userId}/tasks/{taskId}",
        "definition": {
          "entityName": "Task",
          "schema": { "$ref": "#/backend/entities/Task" },
          "description": "Stores tasks for a user."
        }
      },
      {
        "path": "/users/{userId}/produceListings/{produceListingId}",
        "definition": {
          "entityName": "ProduceListing",
          "schema": { "$ref": "#/backend/entities/ProduceListing" },
          "description": "Stores produce listings created by users."
        }
      },
      {
        "path": "/marketPrices/{marketPriceId}",
        "definition": {
          "entityName": "MarketPrice",
          "schema": { "$ref": "#/backend/entities/MarketPrice" },
          "description": "Global market price data."
        }
      },
      {
        "path": "/feedbacks/{feedbackId}",
        "definition": {
          "entityName": "Feedback",
          "schema": { "$ref": "#/backend/entities/Feedback" },
          "description": "User feedback submissions."
        }
      },
      {
        "path": "/orders/{orderId}",
        "definition": {
          "entityName": "Order",
          "schema": { "$ref": "#/backend/entities/Order" },
          "description": "Stores all marketplace orders."
        }
      },
      {
        "path": "/users/{userId}/subscriptions/{subscriptionId}",
        "definition": {
          "entityName": "Subscription",
          "schema": { "$ref": "#/backend/entities/Subscription" },
          "description": "User subscription details."
        }
      },
      {
        "path": "/transactions/{transactionId}",
        "definition": {
          "entityName": "Transaction",
          "schema": { "$ref": "#/backend/entities/Transaction" },
          "description": "Stores all financial transactions."
        }
      }
    ]
  }
}
